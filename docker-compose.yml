version: "3.8"

services:
  # Ollama Service with GPU support
  ollama:
    image: ollama/ollama:latest
    container_name: ollama_service
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=*
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: product_generator_backend
    ports:
      - "3000:3000"
    volumes:
      - ./python_image_generator/imagenes_consumibles:/app/python_image_generator/imagenes_consumibles
      - ./python_image_generator/metadata:/app/python_image_generator/metadata
    environment:
      - NODE_ENV=production
      - API_PORT=3000
      - OLLAMA_URL=http://ollama:11434
      - MODEL_NAME=gemma3:1b
      - PYTHON_SERVICE_URL=http://python:8000
    depends_on:
      - ollama
      - python
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/api/images/service/status",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Python Image Generator Service
  python:
    build:
      context: ./python_image_generator
      dockerfile: Dockerfile
    container_name: python_image_generator
    ports:
      - "8000:8000"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import torch; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Ollama Model Puller
  ollama-pull:
    image: ollama/ollama:latest
    container_name: ollama_model_puller
    depends_on:
      ollama:
        condition: service_healthy
    environment:
      - OLLAMA_HOST=http://ollama:11434
    command: >
      sh -c "
        echo 'Pulling gemma3:1b model...' &&
        ollama pull gemma3:1b &&
        echo 'Model gemma3:1b pulled successfully'
      "
    restart: "no"

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: product_generator_frontend
    ports:
      - "80:80"
      - "443:443"
    environment:
      - VITE_API_URL=http://localhost:3000/api
    depends_on:
      - backend
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:80/",
        ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  ollama_data:
    driver: local

networks:
  default:
    driver: bridge
